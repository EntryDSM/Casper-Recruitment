spring:
  datasource:
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: ${JPA_HIBERNATE_DDL_AUTO}
    show-sql: ${JPA_SHOW_SQL}
    properties:
      hibernate:
        format_sql: ${JPA_FORMAT_SQL}
        dialect: org.hibernate.dialect.MySQLDialect
    open-in-view: false


  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope: ${GITHUB_ACCESS_SCOPE_1}
            redirect-url: ${GITHUB_REDIRECT_URL}
            authorization-grant-type: ${GITHUB_AUTHORIZATION_GRANT_TYPE}
            authorization-request-base-uri: ${GITHUB_AUTHORIZATION_REQUEST_BASE_URI}
            client-name: ${GITHUB_CLIENT_NAME}
            api-base-uri: ${GITHUB_API_BASE_URI}
            base-uri: ${GITHUB_BASE_URI}
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_SECRET}
            scope: profile, email
        provider:
          github:
            authorization-uri: ${AUTHORIZATION_URI}
            token-uri: ${TOKEN_URI}
            user-info-uri: ${USER_INFO_URI}
            user-name-attribute: ${USER_NAME_ATTRIBUTE}
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

github:
  auth:
    failure: ${GITHUB_AUTH_FAILURE}
    redirect-url: ${GITHUB_AUTH_REDIRECT_URL}
    success-authentication-url: ${SUCCESS_AUTHENTICATION_URL}
    failure-authentication-url: ${FAILURE_AUTHENTICATION_URL}

jwt:
  header: ${HEADER}
  prefix: ${PREFIX}
  secret-key: ${JWT_SECRET}
  access-exp: ${ACCESS_EXP}
  refresh-exp: ${REFRESH_EXP}

oauth:
  google:
    redirect: ${GOOGLE_DIRECT_URL}

